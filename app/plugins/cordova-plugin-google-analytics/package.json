{
  "_args": [
    [
      {
        "raw": "cordova-plugin-google-analytics@^1.8.3",
        "scope": null,
        "escapedName": "cordova-plugin-google-analytics",
        "name": "cordova-plugin-google-analytics",
        "rawSpec": "^1.8.3",
        "spec": ">=1.8.3 <2.0.0",
        "type": "range"
      },
      "C:\\Users\\Usuario\\Desktop\\TecnoDesign\\Dezling App\\app"
    ]
  ],
  "_from": "cordova-plugin-google-analytics@>=1.8.3 <2.0.0",
  "_id": "cordova-plugin-google-analytics@1.8.3",
  "_inCache": true,
  "_location": "/cordova-plugin-google-analytics",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/cordova-plugin-google-analytics-1.8.3.tgz_1498472697652_0.4344150638207793"
  },
  "_npmUser": {
    "name": "victorsosa",
    "email": "victornsosa@gmail.com"
  },
  "_npmVersion": "5.0.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "cordova-plugin-google-analytics@^1.8.3",
    "scope": null,
    "escapedName": "cordova-plugin-google-analytics",
    "name": "cordova-plugin-google-analytics",
    "rawSpec": "^1.8.3",
    "spec": ">=1.8.3 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npmjs.org/cordova-plugin-google-analytics/-/cordova-plugin-google-analytics-1.8.3.tgz",
  "_shasum": "234b152c4874e22675fcffc9a57ac378385f6a0a",
  "_shrinkwrap": null,
  "_spec": "cordova-plugin-google-analytics@^1.8.3",
  "_where": "C:\\Users\\Usuario\\Desktop\\TecnoDesign\\Dezling App\\app",
  "author": {
    "name": "Dan Wilson"
  },
  "bugs": {
    "url": "https://github.com/danwilson/google-analytics-plugin/issues"
  },
  "cordova": {
    "id": "cordova-plugin-google-analytics",
    "platforms": [
      "android",
      "ios"
    ]
  },
  "dependencies": {},
  "description": "Google Universal Analytics Plugin",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-gaSMz/XKKjO4qEXlY4/JNC0Un0rK5lTWOBp41Yb+lfC7Jo5xRaUxRGHF9GHcXzYRHEETiwQEvviAj3S6Dp8TwQ==",
    "shasum": "234b152c4874e22675fcffc9a57ac378385f6a0a",
    "tarball": "https://registry.npmjs.org/cordova-plugin-google-analytics/-/cordova-plugin-google-analytics-1.8.3.tgz"
  },
  "gitHead": "d782f577c968337f8df4c94733cea8b298fd087e",
  "homepage": "https://github.com/danwilson/google-analytics-plugin#readme",
  "keywords": [
    "cordova",
    "googleanalytics",
    "ecosystem:cordova",
    "cordova-android",
    "cordova-ios",
    "analytics",
    "google",
    "universal",
    "universalanalytics"
  ],
  "license": "MIT",
  "maintainers": [
    {
      "name": "dancwilson",
      "email": "dwilson1@gmail.com"
    }
  ],
  "name": "cordova-plugin-google-analytics",
  "optionalDependencies": {},
  "readme": "google-analytics-plugin\n=======================\n[![npm](https://img.shields.io/npm/v/cordova-plugin-google-analytics.svg)](https://www.npmjs.com/package/cordova-plugin-google-analytics)\n[![npm](https://img.shields.io/npm/dt/cordova-plugin-google-analytics.svg?label=npm%20downloads)](https://www.npmjs.com/package/cordova-plugin-google-analytics)\n[![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\nCordova (PhoneGap) 3.0+ Plugin to connect to Google's native Universal Analytics SDK\n\nPrerequisites:\n* A Cordova 3.0+ project for iOS, Android, browser (PWA), and/or Windows Phone 8\n* A Mobile App property through the Google Analytics Admin Console\n* (Android) Google Play Services SDK installed via [Android SDK Manager](https://developer.android.com/sdk/installing/adding-packages.html)\n\n# Installing\n\nThis plugin follows the Cordova 3.0+ plugin spec, so it can be installed through the Cordova CLI in your existing Cordova project:\n```bash\ncordova plugin add https://github.com/danwilson/google-analytics-plugin.git\n```\n\nThis plugin is also available on npm if you are using Cordova 5.0+:\n```bash\ncordova plugin add cordova-plugin-google-analytics\n```\n\n... OR the Cordova Plugin Registry if you are using a version of Cordova before 5.0 (while it remains open, as it is planning to shut down soon due to the move to npm):\n```bash\ncordova plugin add com.danielcwilson.plugins.googleanalytics\n```\n\n*Important Note* If the latest versions (0.8.0+) of this plugin are not working for you with Android on Cordova 5.0+, please try the suggestions in [Issues 123](https://github.com/danwilson/google-analytics-plugin/issues/123#issuecomment-151145095). Google Play Services has been very confusing to integrate, but in recent months it has been simplified.  This plugin uses the new simpler way (including it as a framework instead of bundling it which can conflict with other plugins bundling it), but if you previously installed this plugin some old files might still be lingering.\n\nThe plugin.xml file will add the Google Analytics SDK files for Android, iOS, browser (PWA) and/or Windows Phone 8.  Follow [Google's steps](#sdk-files) if you need to update these later.  Also make sure to review the Google Analytics [terms](http://www.google.com/analytics/terms/us.html) and [SDK Policy](https://developers.google.com/analytics/devguides/collection/protocol/policy)\n\nIf you are not using the CLI, follow the steps in the section [Installing Without the CLI](#nocli)\n\nWindows Phone users have to manually add the [Google Analytics SDK for Windows 8 and Windows Phone](https://googleanalyticssdk.codeplex.com/) to your solution. To do this, just open your Cordova solution in Visual Studio, and add the [GoogleAnalyticsSDK package via NuGet](http://nuget.org/packages/GoogleAnalyticsSDK). This plugin requires v1.3.0 or higher.\n\n# Release note\n\nv1.0.0 -- api change from ```window.analytics``` to ```window.ga```, 'analytics' is deprecated since 1.0.0 and you should use the new api 'ga',\nbecause in the next release we are removing the analytics.\n\nv1.7.x -- since this version there are new parameters in some of the old methods like `startTrackerWithId('UA-XXXX-YY', 30)` \nand this is causing errors for those who are using the ionic 2(ionic-native) or ionic 1 (ngCordova); \nthese wrapper interfaces don't have the new parameters at the time we did the changes; so please update you ionic framework to the lastest version.\n\nv1.7.11 -- since this version there is back compatibility with the new and old parameters in the method `startTrackerWithId('UA-XXXX-YY', 30)` to avoid loading issues reported.\n\n\n# JavaScript Usage\n\n**All the following methods accept optional success and error callbacks after all other available parameters.**\n\nIn your 'deviceready' handler, set up your Analytics tracker:\n* `window.ga.startTrackerWithId('UA-XXXX-YY', 30)` where UA-XXXX-YY is your Google Analytics Mobile App property and 30 is the dispatch period (optional)\n\nTo track a Screen (PageView):\n* `window.ga.trackView('Screen Title')`\n\nTo track a Screen (PageView) w/ campaign details:\n* `window.ga.trackView('Screen Title', 'my-scheme://content/1111?utm_source=google&utm_campaign=my-campaign')`\n\nTo track a Screen (PageView) and create a new session:\n* `window.ga.trackView('Screen Title', '', true)`\n\nTo track an Event:\n* `window.ga.trackEvent('Category', 'Action', 'Label', Value)` Label and Value are optional, Value is numeric\n\nTo track an Event and create a new session:\n* `window.ga.trackEvent('Category', 'Action', 'Label', Value, true)` Label, Value and newSession are optional, Value is numeric, newSession is true/false\n\nTo track custom metrics:\n* `window.ga.trackMetric('key', Value)` Value is optional\n\nTo track an Exception:\n* `window.ga.trackException('Description', Fatal)` where Fatal is boolean\n\nTo track User Timing (App Speed):\n* `window.ga.trackTiming('Category', IntervalInMilliseconds, 'Variable', 'Label')` where IntervalInMilliseconds is numeric\n\nTo add a Transaction (Ecommerce)\n* `window.ga.addTransaction('ID', 'Affiliation', Revenue, Tax, Shipping, 'Currency Code')` where Revenue, Tax, and Shipping are numeric\n\nTo add a Transaction Item (Ecommerce)\n* `window.ga.addTransactionItem('ID', 'Name', 'SKU', 'Category', Price, Quantity, 'Currency Code')` where Price and Quantity are numeric\n\nTo add a Custom Dimension\n* `window.ga.addCustomDimension('Key', 'Value', success, error)`\n* Key should be integer index of the dimension i.e. send `1` instead of `dimension1` for the first custom dimension you are tracking.\n* e.g. `window.ga.addCustomDimension(1, 'Value', success, error)`\n\nTo set a UserId:\n* `window.ga.setUserId('my-user-id')`\n\nTo set a specific app version:\n* `window.ga.setAppVersion('1.33.7')`\n\nTo get a specific variable using this key list https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters:\nfor example to get campaign name:\n* `window.ga.getVar('cn', function(result){ console.log(result);})`\n\nTo set a specific variable using this key list https://developers.google.com/analytics/devguides/collection/protocol/v1/parameters:\nfor example to set session control:\n* `window.ga.setVar('sc', 'end', function(result){ console.log(result);})`\n\nTo manually dispatch any data (this is not implemented in browser platform):\n* `window.ga.dispatch()`\n\nTo set a anonymize Ip address:\n* `window.ga.setAnonymizeIp(true)`\n\nTo set Opt-out:\n* `window.ga.setOptOut(true)`\n\nTo enabling Advertising Features in Google Analytics allows you to take advantage of Remarketing, Demographics & Interests reports, and more:\n* `window.ga.setAllowIDFACollection(true)`\n\nTo enable verbose logging:\n* `window.ga.debugMode()`\n\nTo enable/disable automatic reporting of uncaught exceptions\n* `window.ga.enableUncaughtExceptionReporting(Enable, success, error)` where Enable is boolean\n\n# Example use ionic 2 (Ionic Native)\n```shell\nnpm i --save @ionic-native/google-analytics\n```\n```javascript\nimport { GoogleAnalytics } from '@ionic-native/google-analytics';\nimport { Platform } from 'ionic-angular';\n\n...\n\n  constructor(private ga: GoogleAnalytics, private platform: Platform) { }\n  \n  initializeApp() {\n    this.platform.ready().then(() => {\n      this.ga.startTrackerWithId('UA-00000000-0')\n        .then(() => {\n          console.log('Google analytics is ready now');\n          //the component is ready and you can call any method here\n          this.ga.debugMode();\n          this.ga.setAllowIDFACollection(true);\n        })\n        .catch(e => console.log('Error starting GoogleAnalytics', e));      \n    });\n  }\n```\n\n# Installing Without the CLI <a name=\"nocli\"></a>\n\nCopy the files manually into your project and add the following to your config.xml files:\n```xml\n<feature name=\"UniversalAnalytics\">\n  <param name=\"ios-package\" value=\"UniversalAnalyticsPlugin\" />\n</feature>\n```\n```xml\n<feature name=\"UniversalAnalytics\">\n  <param name=\"android-package\" value=\"com.danielcwilson.plugins.analytics.UniversalAnalyticsPlugin\" />\n</feature>\n```\n```xml\n<feature name=\"UniversalAnalytics\">\n  <param name=\"wp-package\" value=\"UniversalAnalyticsPlugin\" />\n</feature>\n```\n<a name=\"sdk-files\"></a>\nYou also will need to manually add the Google Analytics SDK files:\n* Download the Google Analytics SDK 3.0 for [iOS](https://developers.google.com/analytics/devguides/collection/ios/) and/or [Android](https://developers.google.com/analytics/devguides/collection/android/)\n* For iOS, add the downloaded Google Analytics SDK header files and libraries according to the [Getting Started](https://developers.google.com/analytics/devguides/collection/ios/v3) documentation\n* For Android, add `libGoogleAnalyticsServices.jar` to your Cordova Android project's `/libs` directory and build path\n* For Windows Phone, add the [GoogleAnalyticsSDK package via NuGet](http://nuget.org/packages/GoogleAnalyticsSDK)\n\n# Integrating with Lavaca\n\nThe `lavaca` directory includes a component that can be added to a <a href=\"http://getlavaca.com\">Lavaca</a> project.  It offers a way to use the web `analytics.js` when the app is running in the browser and not packaged as Cordova.\n\n* Copy `AnalyticsService.js` to your Lavaca project (I create a directory under `js/app` called `data`).\n* In your config files (`local.json`, `staging.json`, `production.js`) create properties called `google_analytics_id` (for the Mobile App UA property) and `google_analytics_web_id` (for the Web UA property) and set the appropriate IDs or leave blank as needed.\n* In any file you want to track screen views or events, require AnalyticsService and use the methods provided.\n\n```javascript\nvar analyticsService = require('app/data/AnalyticsService');\n\nanalyticsService.trackView('Home');\n```\n\n# Browser (PWA)\n\nFor browser (PWA), people who want to use the plugin in a website that has already integrated google analytics needs \nto make sure that they remove the google analytics snippet from the head section of the page and change the global `ga` \nobject name to something else. The plugin uses `nativeGa` instead. This can be changed by the following code.\n\n```js\n// insert this in your head\n<script>\nwindow['GoogleAnalyticsObject'] = 'fooGa';\n</script>\n```\n\nThe plugin will pick up the new name.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/danwilson/google-analytics-plugin.git"
  },
  "version": "1.8.3"
}
